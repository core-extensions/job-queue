{"php":"7.4.33","version":"3.64.0:v3.64.0#58dd9c931c785a79739310aef5178928305ffa67","indent":"    ","lineEnding":"\n","rules":{"binary_operator_spaces":{"default":"at_least_single_space"},"blank_line_after_opening_tag":true,"blank_line_between_import_groups":true,"blank_lines_before_namespace":true,"braces_position":{"allow_single_line_empty_anonymous_classes":true},"class_definition":{"inline_constructor_arguments":false,"space_before_parenthesis":true},"compact_nullable_type_declaration":true,"declare_equal_normalize":true,"lowercase_cast":true,"lowercase_static_reference":true,"new_with_parentheses":true,"no_blank_lines_after_class_opening":true,"no_extra_blank_lines":{"tokens":["use"]},"no_leading_import_slash":true,"no_whitespace_in_blank_line":true,"ordered_class_elements":{"order":["use_trait"]},"ordered_imports":true,"return_type_declaration":true,"short_scalar_cast":true,"single_import_per_statement":{"group_to_single_imports":false},"single_space_around_construct":{"constructs_followed_by_a_single_space":["abstract","as","case","catch","class","const_import","do","else","elseif","final","finally","for","foreach","function","function_import","if","insteadof","interface","namespace","new","private","protected","public","static","switch","trait","try","use","use_lambda","while"],"constructs_preceded_by_a_single_space":["as","else","elseif","use_lambda"]},"single_trait_insert_per_statement":true,"ternary_operator_spaces":true,"unary_operator_spaces":{"only_dec_inc":true},"visibility_required":true,"blank_line_after_namespace":true,"constant_case":true,"control_structure_braces":true,"control_structure_continuation_position":true,"elseif":true,"function_declaration":true,"indentation_type":true,"line_ending":true,"lowercase_keywords":true,"method_argument_space":{"attribute_placement":"ignore","on_multiline":"ensure_fully_multiline"},"no_break_comment":true,"no_closing_tag":true,"no_multiple_statements_per_line":true,"no_space_around_double_colon":true,"no_spaces_after_function_name":true,"no_trailing_whitespace":true,"no_trailing_whitespace_in_comment":true,"single_blank_line_at_eof":true,"single_class_element_per_statement":{"elements":["property"]},"single_line_after_imports":true,"spaces_inside_parentheses":true,"statement_indentation":true,"switch_case_semicolon_to_colon":true,"switch_case_space":true,"encoding":true,"full_opening_tag":true,"array_syntax":{"syntax":"short"},"no_unused_imports":true,"trailing_comma_in_multiline":true,"phpdoc_align":true,"phpdoc_order":true,"phpdoc_separation":true,"phpdoc_single_line_var_spacing":true,"phpdoc_trim":true,"phpdoc_var_without_name":true,"single_quote":true},"hashes":{"src\/Repository\/JobRepository.php":"72e0767c41e0125329a6b5fa4e50d1f6","src\/JobCommandFactoryInterface.php":"3dafe603d1a7f37f94bfcd16f5abd7dc","src\/JobManager.php":"87e788a4249ee0019cd6dbf0c0c6934a","src\/JobCommandInterface.php":"c2e2df08ade7a71c4f37c13894e5783b","src\/Entity\/Job.php":"b73f0c527e4d643734a05635235e33f9","src\/ExampleReverseGeocodeCommand.php":"492438caef538c6722738564378cf319","src\/AbstractJobCommand.php":"6e76e59ab297b0084038eb5274d59485","src\/ExampleReverseGeocodeCommandHandler.php":"3ba4b3b90ae9041d4f2b938937837458","src\/Exception\/UnsupportedJobTypeException.php":"acb45a391edac3d01b15f91ad9d73df5","src\/Exception\/JobNonRetryableExceptionInterface.php":"b7fcce558fdddf474d5488227fb7f35e","src\/Exception\/JobRetryableExceptionInterface.php":"863fb646d7f653e02ee711c3ac449ddf","src\/Exception\/JobUnhandledException.php":"58ee3fbdb75da010567a4c91f01e3f39","src\/Exception\/JobBusinessLogicException.php":"a813f863a4675a22fc893d9e69e69233","src\/Exception\/JobExceptionInterface.php":"5de9fb7686167cbb04fc5bdd75f67d8e","src\/Exception\/TemporaryNetworkRetryableException.php":"84080954c0412ddd9e3a9a7705736346","src\/ExampleJobCommandFactory.php":"5529e972d324f417b08f1741c5c7b3cb"}}